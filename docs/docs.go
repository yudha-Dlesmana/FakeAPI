// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1": {
            "get": {
                "description": "Basic information about the FakeAPI service, including status, version",
                "tags": [
                    "Welcome"
                ],
                "summary": "Welcome to FakeAPI",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    }
                }
            }
        },
        "/v1/fakeAPI": {
            "get": {
                "description": "Generate fake data base on the provided type and count parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FakeAPI"
                ],
                "summary": "Generate Fake API Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faker type mapping (e.g. {\\'user\\':\\'username\\', ...})",
                        "name": "type",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of fake data to generate (default 1)",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "DefaultResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Welcome to FakeAPI",
                    "description": "A message or short summary of the response"
                },
                "info": {
                    "type": "string",
                    "example": "This is a fake REST API for prototyping, frontend development, or testing purposes only.",
                    "description": "Additional details or context about the API"
                },
                "status": {
                    "type": "string",
                    "example": "development",
                    "description": "The current status or environment of the API"
                },
                "version": {
                    "type": "string",
                    "example": "v1",
                    "description": "The current version of the API"
                },
            }
        },
        "Response": {
            "type": "object",
            "properties": {
                "status": {
                    "type": integer,
                    "example": 200,
                    "description": "Status code (e.g. 200 or 400)",
                },
                "message": {
                    "type": "string",
                    "example": "success",
                    "description": "Descriptive message"
                },
                "data": {
                    "type": any,
                    "example": [{"user": "vWrCkGZ"},{"user": "aslkajwqr"}],
                    "description": "Data Payload"
                },
            }
        },
        "ErrResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": integer,
                    "example": 400,
                    "description": "Status code (e.g. 200 or 400)",
                },
                "message": {
                    "type": "string",
                    "example": "error",
                    "description": "Descriptive message"
                },
                "data": {
                    "type": any,
                    "example": { ErrMessage : ""},
                    "description": "Data Payload"
                },
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Fake API",
	Description:      "This is a fake REST API for prototyping, frontend development, or testing purposes only",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
